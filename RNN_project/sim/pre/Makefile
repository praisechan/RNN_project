.PHONY: help clean clean_all
.DEFAULT_GOAL := help
DATE = `date +%m%d_%H:%M:%S`

SIMUL_EXEC = vcs
# INCLUDE_PATH="../../../RTL/TOP"+"/tool/Program/synopsys/syn_vS-2021.06-SP5-2/dw/dw01/src_ver"
INCLUDE_PATH=/tool/Program/synopsys/syn_vS-2021.06-SP5-2/dw/dw01/src_ver
TIME_SCALE=1ns/1ps
FSDB_FILE=./reports/tb_TOP.fsdb
DBDIR_FILE=./simv.daidir
LIBPATH=/tool/Program/synopsys/syn_vS-2021.06-SP5-2/dw/sim_ver
FILELIST=./script/run_TOP.f
MACRO=
EXTRA_VFILE=
SAIF_FILE=tb_TOP.saif
COUNT="100"

setup:
	mkdir -p logs
	mkdir -p reports
	date > setup

compile: setup
	${SIMUL_EXEC} \
	-V \
	-kdb \
	-sverilog \
	-full64 \
	-debug_access+all \
	-debug_region+cell \
	-l logs/compile.log.${DATE} \
	-timescale=$(TIME_SCALE) \
	+incdir+$(INCLUDE_PATH) \
	-y $(LIBPATH) \
	+delay_mode_zero \
	+libext+.v+ \
	-adopt_wildcard \
	-f $(FILELIST) \
	-l gate_sim.log
	date > compile

sim : compile
	./simv -reportstats -l ./logs/sim.log.${DATE}
	date > sim

verdi : sim
	verdi -ssf $(FSDB_FILE) -dbdir $(DBDIR_FILE)
	date > verdi

# ==================================================================
# utils
# ==================================================================
fsdb2saif :
	fsdb2vcd $(FSDB_FILE) -o waveform.vcd -sv
	vcd2saif -input waveform.vcd -output $(SAIF_FILE)

clean: ## Clean logs and autogenerated files.
	rm -f setup compile sim verdi
	rm -f *.log *.key *.history *.swp core.*

clean_all: clean ## Clean entirely, excluding scripts and source files.
	rm -rf *.log *.key *.history *.saif *.d *shm core.* *.vcd init
	rm -rf *.daidir *.vdb csrc simv *.dump *.vpd
	rm -rf novas.* verdiLog
	rm -rf *.fsdb
	rm -rf testbench_*
	rm -rf verdi_config_file
	rm -rf logs/* reports/*

help:
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

